@{
    ViewData["Title"] = "Quiz Specjalnościowy";
}

@section Styles {
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/css/QuizForm.css")" />
}
@section Emoji {
	<div class="emoji-section">
		<div class="emoji-background" style="top: 20%; left: 10%;">📚</div> <!-- książki -->
		<div class="emoji-background" style="top: 40%; left: 5%;">🧑‍🏫</div> <!-- nauczyciel -->
		<div class="emoji-background" style="top: 60%; left: 15%;">🧠</div> <!-- mózg -->
		<div class="emoji-background" style="top: 80%; left: 10%;">📝</div> <!-- notatnik -->
		<div class="emoji-background" style="top: 90%; left: 20%;">🔍</div> <!-- lupa -->
		<div class="emoji-background" style="top: 10%; left: 2%;">🌍</div> <!-- globus -->
		<div class="emoji-background" style="top: 30%; left: 3%;">🔬</div> <!-- mikroskop -->
		<div class="emoji-background" style="top: 50%; left: 8%;">📖</div> <!-- książka -->
		<div class="emoji-background" style="top: 70%; left: 7%;">💡</div> <!-- żarówka (pomysł) -->
		<div class="emoji-background" style="top: 90%; left: 15%;">🎓</div> <!-- czapka absolwenta -->
		<div class="emoji-background" style="top: 15%; left: 80%;">🧑‍🎓</div> <!-- student -->
		<div class="emoji-background" style="top: 25%; left: 70%;">📊</div> <!-- wykres -->
		<div class="emoji-background" style="top: 35%; left: 85%;">🌱</div> <!-- roślina (rozwój) -->
		<div class="emoji-background" style="top: 45%; left: 75%;">🧪</div> <!-- próbówka -->
		<div class="emoji-background" style="top: 55%; left: 90%;">📅</div> <!-- kalendarz -->
		<div class="emoji-background" style="top: 65%; left: 70%;">🎒</div> <!-- plecak szkolny -->
		<!-- Emotki po prawej -->
		<div class="emoji-background" style="top: 25%; left: 95%;">🧑‍🔬</div> <!-- naukowiec -->
		<div class="emoji-background" style="top: 45%; left: 90%;">🎵</div> <!-- nuty (muzyka) -->
		<div class="emoji-background" style="top: 65%; left: 85%;">🔭</div> <!-- teleskop -->
		<div class="emoji-background" style="top: 75%; left: 92%;">💻</div> <!-- komputer -->
		<div class="emoji-background" style="top: 85%; left: 80%;">⚙️</div> <!-- zębatka (technologia) -->
	</div>
}
<div class="quiz-container">

<h1>Quiz Specjalnościowy</h1>

@if (ViewBag.Quiz == null)
{
    <p>Nie udalo sie pobrac testu.</p>
	<a asp-action="QuizWstepny" class="btn btn-primary">Wypełnij najpierw quiz wstępny</a>
    
} else
{
	<h3>Wybrałeś zawód: @ViewBag.SelectedJob</h3>
    <p id="opis">@ViewBag.Quiz.Opis</p>
	
	<form asp-action="QuizSpecjalnosciowyResult" method="post" id="quiz-form">
		<div id="form-nav">
			<input type="button" class="form-nav-button" id="prev-question-button"value="Poprzednie Pytanie" />
			<input type="submit" class="form-nav-button" id="submit-button" value="Wyślij Odpowiedzi" />
			<input type="button" class="form-nav-button" id="next-question-button" value="Następne Pytanie" />
		</div>

		<div class="pytanie-container">
			@{int i = 1;}
			@foreach (Pytanie pyt in ViewBag.Quiz.Pytania)
			{

				<div class="pytanie" id="pyt-@pyt.Id">
					<h4>@i. @pyt.Tekst</h4>
					@if (pyt.Punktacja > 2)
					{
						<button id="kolo-@pyt.Id" class="kolo-btn" data-pyt="@pyt.Id">Koło ratunkowe</button>
						<p style="font-size: 12px;">Użycie koła zmniejsza liczbę punktów możliwych do zdobycia za pytanie.</p>
						<input type="hidden" value="False" id="help-@pyt.Id" name="help-@pyt.Id" />
					}
					@foreach (Odpowiedz odp in pyt.Odpowiedzi ?? new List<Odpowiedz>())
					{
						bool isHelpExcluded = ViewBag.HelpAnswerIds.Contains(odp.Id);
						<div class="odpowiedz" data-pyt="@pyt.Id" data-exclude="@isHelpExcluded">
							<input
								type="radio"
								class="odp"
								id="odp-@odp.Id"
								name="pyt-@pyt.Id"
								value="@odp.Id"
								data-pyt="@pyt.Id"
								required />
							<label for="odp-@odp.Id">@odp.Tekst</label>
						</div>
					}
				</div>
				i++;
			}
		</div>
		<input type="hidden" name="quiz-id" value="@ViewBag.Quiz.Id" />
	</form>

}
</div>

@section Scripts {
	<script language="javascript">
		const questions = Array.from(document.querySelectorAll('.pytanie'));
		let currentQuestion = questions[0];
		let invalidQuestions = [];

		function updateView() {
			console.log('udpate view', { currentQuestion });
			questions.forEach((question, i) => {
				if (currentQuestion == question) {
					question.classList.add('active');
				} else {
					question.classList.remove('active');
				}
			})
		}

		function goToQuestion(index) {
			if (index < 0) index = questions.length + index;
			currentQuestion = questions[index % questions.length];
			updateView();
		}

		function prevQuestion() {
			goToQuestion(questions.indexOf(currentQuestion) - 1);
		}

		function nextQuestion() {
			goToQuestion(questions.indexOf(currentQuestion) + 1);
		}

		window.addEventListener('DOMContentLoaded', () => {
			console.log('QUIZ FORM');
			const form = document.getElementById('quiz-form');
			
			document.getElementById('next-question-button').addEventListener('click', nextQuestion);
			document.getElementById('prev-question-button').addEventListener('click', prevQuestion);

			form.querySelectorAll('input').forEach((el) => el.addEventListener('invalid', (e) => {
				questionId = 'pyt-' + e.target.getAttribute('data-pyt');
				invalidQuestions.push(questionId);
			}), true);

			form.querySelector('#submit-button').addEventListener('click', (e) => {
				invalidQuestions = [];
				const valid = form.checkValidity();
				if (!valid) {
					currentQuestion = document.getElementById(invalidQuestions[0]);
					updateView();
				}
			});

			form.querySelectorAll('.kolo-btn').forEach((btn) => btn.addEventListener('click', (e) => {
				e.preventDefault();
				const pytId = e.target.getAttribute('data-pyt');
				document.getElementById(`help-${pytId}`).value = 'True';
				document.querySelectorAll(`.odpowiedz[data-pyt='${pytId}'][data-exclude='True']`).forEach(el => {
					el.querySelector('input').disabled = true;
					el.style.color = 'gray';
				});
				e.target.disabled = true;
			}));


			updateView();
		})
	</script>
}
